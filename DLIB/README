These Projects were part of Opencv.org course#2- https://opencv.org/courses/, and use the DLIB face detection libraries- http://dlib.net/ extensively. 
The Juptyter notebooks can be run on Google colab. 

Project 1: DoppelGanger_Find_Celebrity_Look_Alike.ipynb
Description:
Face Recognition algorithms work by convertin a face into a high dimensional vector and then learn a feature space in that high dimension. 
Once the algorithm learns a robust feature space, you can add more people to the same space and they will form a different cluster.
The project in this notebook uses the Face Embeddings to find a doppelganger or look-alike to a given person. 
Given images of people and a celebrity dataset, the task is to find the celebrity look-alike.
There are many datasets which contain images of celebrities:
-CelebA Dataset
-VGGFace
-VGGFace2
-MS-Celeb-1M
-Celebrity-Together Dataset
Since most of the datasets are huge in size, a small dataset is curated for this experiment which is a subset of the Query set of the Celebrity Together Dataset. 
The query dataset has around 1100 celebs and is ~400MB in size.
The subset has 5 images per celebrity. It is ~70MB in size. celeb_mapping.npy file has the mapping of the code name to the actual name of the celebrity.

Project 2: Virtual makeup application
Description:
This project builds features for a Virtual Makeup application.
Specifically the app takes the image of the face of a female without makeup as input and generates an enhanced image of the face by adding sunglasses, blush and earrings.
The "virtual-makeup" repo contains both the input and the final output generated by the app. Both .py and .pynb source files are also available.